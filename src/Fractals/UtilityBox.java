/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Fractals;
import java.awt.*;
import javax.swing.*;

/**
 *
 * @author kk
 */
class UtilityBox extends JFrame{

public static boolean zoom = true;
//true for zoom in, false for zoom out
public static boolean update = false;

private static int sizeReun = 20;
private static int typeData = 8;
public static float undo [][];
public static float redo [][];
//[type of data][number of stored data]
//type of data : 0 = type, 1 = range, 2 = mid_re, 3 = mid_im, 4 = rSlider, 5 = gSlider, 6 = bSlider, 7 = max iter (8 data)
// 0 on fractal type incdecates that the stack is empty
    
    public UtilityBox() {
        undo = new float [typeData][sizeReun];
        redo = new float [typeData][sizeReun];
        
        initComponents();
        Zoom_control.add(zoominRadio);
        Zoom_control.add(zoomoutRadio);
    }
   
    private void changeColor(int r, int g, int b){
        this.rSlider.setValue(r);
        this.gSlider.setValue(g);
        this.bSlider.setValue(b);
        Color c = new Color(r,g,b);
        colorPreview.setBackground(c);
    }
    
    
    
    public void pop( float a[][] ){
        float dummy [][] = a;
        FractalGen.typeFractal = dummy[0][sizeReun - 1];
        FractalGen.range = dummy[1][sizeReun - 1];
        FractalGen.midRe = dummy[2][sizeReun - 1];
        FractalGen.midIm = dummy[3][sizeReun - 1];
        FractalGen.red = (int)dummy[4][sizeReun - 1];
        FractalGen.green = (int) dummy[5][sizeReun - 1];
        FractalGen.blue = (int)dummy[6][sizeReun - 1];
        FractalGen.iter = (int) dummy[7][sizeReun-1];
        
        changeColor(FractalGen.red,FractalGen.green,FractalGen.blue);
        iterSlider.setValue(FractalGen.iter);
        
        for (int i = sizeReun-1 ; i > 0; i--){ 
            for (int j = 0; j < typeData ; j++){
                a[j][i] = dummy[j][i-1];
            }
        }
        for(int i = 0 ; i < typeData ; i++){
            a[i][0] = 0;
        }
    }
    
    public static void push( float a[][] ){
        float dummy [][] = a;
        for (int i = 0 ; i < sizeReun - 1 ; i++){
            for (int j = 0 ; j < typeData ; j++){
                a[j][i] = dummy [j][i+1];
             
            }
        }
        a[0][sizeReun - 1] = FractalGen.typeFractal;
        a[1][sizeReun - 1] = FractalGen.range;
        a[2][sizeReun - 1] = FractalGen.midRe;
        a[3][sizeReun - 1] = FractalGen.midIm;
        a[4][sizeReun - 1] = FractalGen.red;
        a[5][sizeReun - 1] = FractalGen.green;
        a[6][sizeReun - 1] = FractalGen.blue;
        a[7][sizeReun - 1] = FractalGen.iter;
        
    }
    
    private void initial(){
        FractalGen.midIm = 0;
        FractalGen.midRe = 0;
        FractalGen.range = 4;
        FractalGen.red = 17;
        FractalGen.green = 38;
        FractalGen.blue = 108;
        FractalGen.iter = 450;
        
        changeColor(FractalGen.red,FractalGen.green,FractalGen.blue);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Zoom_control = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        colorPreview = new javax.swing.JPanel();
        rSlider = new javax.swing.JSlider(0,255,17);
        rLabel = new javax.swing.JLabel();
        gSlider = new javax.swing.JSlider();
        gLabel = new javax.swing.JLabel();
        bSlider = new javax.swing.JSlider(0,255,108);
        bLabel = new javax.swing.JLabel();
        zoominRadio = new javax.swing.JRadioButton();
        zoomoutRadio = new javax.swing.JRadioButton();
        saveButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        fractalChooser = new javax.swing.JComboBox<>();
        undoButton = new javax.swing.JButton();
        redoButton = new javax.swing.JButton();
        iterSlider = new javax.swing.JSlider();
        iterLabel = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        colorPreview.setBackground(new java.awt.Color(17, 38, 108));

        javax.swing.GroupLayout colorPreviewLayout = new javax.swing.GroupLayout(colorPreview);
        colorPreview.setLayout(colorPreviewLayout);
        colorPreviewLayout.setHorizontalGroup(
            colorPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 136, Short.MAX_VALUE)
        );
        colorPreviewLayout.setVerticalGroup(
            colorPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 117, Short.MAX_VALUE)
        );

        rSlider.setMaximum(255);
        rSlider.setValue(17);
        rSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rSliderStateChanged(evt);
            }
        });

        rLabel.setText("Red : " + rSlider.getValue());

        gSlider.setMaximum(255);
        gSlider.setValue(38);
        gSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                gSliderStateChanged(evt);
            }
        });

        gLabel.setText("Green : " + gSlider.getValue());

        bSlider.setMaximum(255);
        bSlider.setValue(108);
        bSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bSliderStateChanged(evt);
            }
        });

        bLabel.setText("Blue : "+ bSlider.getValue());

        zoominRadio.setSelected(true);
        zoominRadio.setText("Zoom-in");
        zoominRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoominRadioActionPerformed(evt);
            }
        });

        zoomoutRadio.setText("Zoom-out");
        zoomoutRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoomoutRadioActionPerformed(evt);
            }
        });

        saveButton.setText("Save Image");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        fractalChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mendelbrot", "Burning Ship", "Julia" }));
        fractalChooser.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fractalChooserItemStateChanged(evt);
            }
        });

        undoButton.setText("Undo");
        undoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoButtonActionPerformed(evt);
            }
        });

        redoButton.setText("Redo");
        redoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoButtonActionPerformed(evt);
            }
        });

        iterSlider.setMaximum(1000);
        iterSlider.setMinimum(100);
        iterSlider.setValue(FractalGen.iter);
        iterSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                iterSliderStateChanged(evt);
            }
        });

        iterLabel.setText("Iteration : " + FractalGen.iter);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(colorPreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(gSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(iterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(21, 21, 21)
                                .addComponent(iterSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fractalChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(undoButton)
                                        .addGap(28, 28, 28)
                                        .addComponent(redoButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(zoomoutRadio))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(saveButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(resetButton)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updateButton)
                                    .addComponent(zoominRadio))
                                .addGap(15, 15, 15))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                            .addComponent(rLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(colorPreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fractalChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(iterLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(iterSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(zoominRadio)
                        .addComponent(zoomoutRadio))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(undoButton)
                        .addComponent(redoButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void zoomoutRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoomoutRadioActionPerformed
        // TODO add your handling code here:
            zoom = false;
    }//GEN-LAST:event_zoomoutRadioActionPerformed
 
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        if (FractalFrame.updating == false){
            push(undo);
            FractalGen.red = rSlider.getValue();
            FractalGen.green = gSlider.getValue();
            FractalGen.blue = bSlider.getValue();
            int choice = fractalChooser.getSelectedIndex()+1;
        
            FractalGen.iter = iterSlider.getValue();
        
            if (FractalGen.typeFractal != choice){
                initial();
            }else{

            }
            FractalGen.typeFractal = choice;
            FractalFrame.update();
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        FractalGen FG = new FractalGen();
        FG.save();
        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        if (FractalFrame.updating == false){
            push(undo);
            initial();
            FractalFrame.update();
        }
    }//GEN-LAST:event_resetButtonActionPerformed

    private void rSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rSliderStateChanged
        // TODO add your handling code here:
        
        changeColor(rSlider.getValue(),gSlider.getValue(),bSlider.getValue());
        rLabel.setText("Red : " + rSlider.getValue());
    }//GEN-LAST:event_rSliderStateChanged

    private void gSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_gSliderStateChanged
        // TODO add your handling code here:
        
        changeColor(rSlider.getValue(),gSlider.getValue(),bSlider.getValue());
        gLabel.setText("Green : " + gSlider.getValue());
    }//GEN-LAST:event_gSliderStateChanged

    private void bSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bSliderStateChanged
        // TODO add your handling code here:
        changeColor(rSlider.getValue(),gSlider.getValue(),bSlider.getValue());
        bLabel.setText("Blue : " + bSlider.getValue());
    }//GEN-LAST:event_bSliderStateChanged

    private void zoominRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoominRadioActionPerformed
        // TODO add your handling code here:
        zoom = true;
    }//GEN-LAST:event_zoominRadioActionPerformed

    private void fractalChooserItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fractalChooserItemStateChanged
        
    }//GEN-LAST:event_fractalChooserItemStateChanged

    private void redoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoButtonActionPerformed
        // TODO add your handling code here:
        if (FractalFrame.updating == false){
            if (redo[0][sizeReun - 1] == 0){
            
            }else{
                pop(redo);
                FractalFrame.update();
            }
        }
    }//GEN-LAST:event_redoButtonActionPerformed

    private void undoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoButtonActionPerformed
        // TODO add your handling code here:
        if (FractalFrame.updating == false){
            if (undo[0][sizeReun - 1] == 0){
            
            }else{
                push(redo);
                pop(undo);
                FractalFrame.update();
            }      
        }
    }//GEN-LAST:event_undoButtonActionPerformed

    private void iterSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_iterSliderStateChanged
        // TODO add your handling code here:
        
        iterLabel.setText("Iteration : " + iterSlider.getValue());
    }//GEN-LAST:event_iterSliderStateChanged

    
    /**
     * @param args the command line arguments  
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Zoom_control;
    private javax.swing.JLabel bLabel;
    private javax.swing.JSlider bSlider;
    private javax.swing.JPanel colorPreview;
    private javax.swing.JComboBox<String> fractalChooser;
    private javax.swing.JLabel gLabel;
    private javax.swing.JSlider gSlider;
    private javax.swing.JLabel iterLabel;
    private javax.swing.JSlider iterSlider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel rLabel;
    private javax.swing.JSlider rSlider;
    private javax.swing.JButton redoButton;
    private javax.swing.JButton resetButton;
    public javax.swing.JButton saveButton;
    private javax.swing.JButton undoButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JRadioButton zoominRadio;
    private javax.swing.JRadioButton zoomoutRadio;
    // End of variables declaration//GEN-END:variables

}